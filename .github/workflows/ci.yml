name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: backend

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Build
      run: make build

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: databridge-binary
        path: build/databridge

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
      working-directory: ./frontend

    - name: Run linter
      run: npm run lint
      working-directory: ./frontend

    - name: Run type check
      run: npm run type-check || true
      working-directory: ./frontend

    - name: Run tests
      run: npm test || true
      working-directory: ./frontend

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
      working-directory: ./frontend

    - name: Build
      run: npm run build
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: http://localhost:8080/api

  golangci-lint:
    name: Go Linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m
